apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hookd.name" . }}
  labels:
    {{- include "hookd.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "hookd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hookd.labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: {{ include "hookd.name" . }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
        runAsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hookd.name" . }}
      containers:
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
          command:
            - "/cloud_sql_proxy"
            - "-log_debug_stdout"
            - "-instances={{ .Values.database.instance }}=tcp:5432"
            - "-enable_iam_login"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.22"
        - name: {{ include "hookd.name" . }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          envFrom:
          - secretRef:
              name: {{ include "hookd.name" . }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
